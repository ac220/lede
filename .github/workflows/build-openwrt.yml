name: Build OpenWrt for RK3528A on RiiRii E20C

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 5'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: 'config/rk3528a.config'
  DIY_P1_SH: 'scripts/diy-part1.sh'
  DIY_P2_SH: 'scripts/diy-part2.sh'
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2204)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$USER /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Update feeds
        working-directory: /workdir/openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load custom configuration
        working-directory: /workdir/openwrt
        run: |
          [ -e files ] && mv files files.bak
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE .config
          chmod +x $DIY_P1_SH
          $DIY_P1_SH
          make defconfig

      - name: Customize firmware
        working-directory: /workdir/openwrt
        run: |
          chmod +x $DIY_P2_SH
          $DIY_P2_SH

      - name: Download package
        working-directory: /workdir/openwrt
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        working-directory: /workdir/openwrt
        run: |
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s
          echo "::set-output name=status::success"

      - name: Upload bin directory
        uses: actions/upload-artifact@v2
        if: steps.compile.outputs.status == 'success'
        with:
          name: OpenWrt_bin
          path: /workdir/openwrt/bin    
